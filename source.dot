digraph { 
start0 [label="start"];
block2 [label="block"];
start0 -> block2;
statementchunk3 [label="statementchunk"];
block2 -> statementchunk3;
statement4 [label="statement"];
statementchunk3 -> statement4;
functioncall5 [label="functioncall"];
statement4 -> functioncall5;
prefixexp6 [label="prefixexp"];
functioncall5 -> prefixexp6;
var7 [label="var"];
prefixexp6 -> var7;
identifier8 [label="print"];
var7 -> identifier8;
args9 [label="args"];
functioncall5 -> args9;
leftparentheses10 [label="("];
args9 -> leftparentheses10;
explist11 [label="explist"];
args9 -> explist11;
exp12 [label="exp"];
explist11 -> exp12;
term13 [label="term"];
exp12 -> term13;
integer14 [label="13"];
term13 -> integer14;
binop15 [label="+"];
exp12 -> binop15;
term16 [label="term"];
exp12 -> term16;
term17 [label="term"];
term16 -> term17;
term18 [label="term"];
term17 -> term18;
prefixexp19 [label="prefixexp"];
term18 -> prefixexp19;
leftparentheses20 [label="("];
prefixexp19 -> leftparentheses20;
exp21 [label="exp"];
prefixexp19 -> exp21;
term22 [label="term"];
exp21 -> term22;
integer23 [label="22"];
term22 -> integer23;
binop24 [label="-"];
exp21 -> binop24;
term25 [label="term"];
exp21 -> term25;
integer26 [label="11"];
term25 -> integer26;
rightparentheses27 [label=")"];
prefixexp19 -> rightparentheses27;
binop28 [label="/"];
term17 -> binop28;
integer29 [label="1"];
term17 -> integer29;
binop30 [label="*"];
term16 -> binop30;
integer31 [label="44"];
term16 -> integer31;
rightparentheses32 [label=")"];
args9 -> rightparentheses32;
statement33 [label="statement"];
statementchunk3 -> statement33;
varlist34 [label="varlist"];
statement33 -> varlist34;
var35 [label="var"];
varlist34 -> var35;
identifier36 [label="x"];
var35 -> identifier36;
binop37 [label="="];
statement33 -> binop37;
explist38 [label="explist"];
statement33 -> explist38;
term39 [label="term"];
explist38 -> term39;
integer40 [label="7"];
term39 -> integer40;
statement41 [label="statement"];
statementchunk3 -> statement41;
varlist42 [label="varlist"];
statement41 -> varlist42;
var43 [label="var"];
varlist42 -> var43;
identifier44 [label="y"];
var43 -> identifier44;
binop45 [label="="];
statement41 -> binop45;
explist46 [label="explist"];
statement41 -> explist46;
term47 [label="term"];
explist46 -> term47;
term48 [label="term"];
term47 -> term48;
prefixexp49 [label="prefixexp"];
term48 -> prefixexp49;
leftparentheses50 [label="("];
prefixexp49 -> leftparentheses50;
exp51 [label="exp"];
prefixexp49 -> exp51;
term52 [label="term"];
exp51 -> term52;
integer53 [label="10"];
term52 -> integer53;
binop54 [label="+"];
exp51 -> binop54;
term55 [label="term"];
exp51 -> term55;
prefixexp56 [label="prefixexp"];
term55 -> prefixexp56;
var57 [label="var"];
prefixexp56 -> var57;
identifier58 [label="x"];
var57 -> identifier58;
rightparentheses59 [label=")"];
prefixexp49 -> rightparentheses59;
binop60 [label="*"];
term47 -> binop60;
integer61 [label="2"];
term47 -> integer61;
statement62 [label="statement"];
statementchunk3 -> statement62;
varlist63 [label="varlist"];
statement62 -> varlist63;
var64 [label="var"];
varlist63 -> var64;
identifier65 [label="z"];
var64 -> identifier65;
binop66 [label="="];
statement62 -> binop66;
explist67 [label="explist"];
statement62 -> explist67;
exp68 [label="exp"];
explist67 -> exp68;
term69 [label="term"];
exp68 -> term69;
prefixexp70 [label="prefixexp"];
term69 -> prefixexp70;
var71 [label="var"];
prefixexp70 -> var71;
identifier72 [label="y"];
var71 -> identifier72;
binop73 [label="-"];
exp68 -> binop73;
term74 [label="term"];
exp68 -> term74;
prefixexp75 [label="prefixexp"];
term74 -> prefixexp75;
var76 [label="var"];
prefixexp75 -> var76;
identifier77 [label="x"];
var76 -> identifier77;
statement78 [label="statement"];
statementchunk3 -> statement78;
functioncall79 [label="functioncall"];
statement78 -> functioncall79;
prefixexp80 [label="prefixexp"];
functioncall79 -> prefixexp80;
var81 [label="var"];
prefixexp80 -> var81;
identifier82 [label="print"];
var81 -> identifier82;
args83 [label="args"];
functioncall79 -> args83;
string84 [label="z: "];
args83 -> string84;
statement85 [label="statement"];
statementchunk3 -> statement85;
functioncall86 [label="functioncall"];
statement85 -> functioncall86;
prefixexp87 [label="prefixexp"];
functioncall86 -> prefixexp87;
var88 [label="var"];
prefixexp87 -> var88;
identifier89 [label="print"];
var88 -> identifier89;
args90 [label="args"];
functioncall86 -> args90;
leftparentheses91 [label="("];
args90 -> leftparentheses91;
explist92 [label="explist"];
args90 -> explist92;
term93 [label="term"];
explist92 -> term93;
prefixexp94 [label="prefixexp"];
term93 -> prefixexp94;
var95 [label="var"];
prefixexp94 -> var95;
identifier96 [label="z"];
var95 -> identifier96;
rightparentheses97 [label=")"];
args90 -> rightparentheses97;
statement98 [label="statement"];
statementchunk3 -> statement98;
functioncall99 [label="functioncall"];
statement98 -> functioncall99;
prefixexp100 [label="prefixexp"];
functioncall99 -> prefixexp100;
var101 [label="var"];
prefixexp100 -> var101;
identifier102 [label="print"];
var101 -> identifier102;
args103 [label="args"];
functioncall99 -> args103;
string104 [label="enter a number:"];
args103 -> string104;
statement105 [label="statement"];
statementchunk3 -> statement105;
varlist106 [label="varlist"];
statement105 -> varlist106;
var107 [label="var"];
varlist106 -> var107;
identifier108 [label="n"];
var107 -> identifier108;
binop109 [label="="];
statement105 -> binop109;
explist110 [label="explist"];
statement105 -> explist110;
term111 [label="term"];
explist110 -> term111;
prefixexp112 [label="prefixexp"];
term111 -> prefixexp112;
functioncall113 [label="functioncall"];
prefixexp112 -> functioncall113;
prefixexp114 [label="prefixexp"];
functioncall113 -> prefixexp114;
var115 [label="var"];
prefixexp114 -> var115;
prefixexp116 [label="prefixexp"];
var115 -> prefixexp116;
var117 [label="var"];
prefixexp116 -> var117;
identifier118 [label="io"];
var117 -> identifier118;
dot119 [label="."];
var115 -> dot119;
identifier120 [label="read"];
var115 -> identifier120;
args121 [label="args"];
functioncall113 -> args121;
leftparentheses122 [label="("];
args121 -> leftparentheses122;
explist123 [label="explist"];
args121 -> explist123;
term124 [label="term"];
explist123 -> term124;
string125 [label="*number"];
term124 -> string125;
rightparentheses126 [label=")"];
args121 -> rightparentheses126;
statement127 [label="statement"];
statementchunk3 -> statement127;
varlist128 [label="varlist"];
statement127 -> varlist128;
var129 [label="var"];
varlist128 -> var129;
identifier130 [label="factorial"];
var129 -> identifier130;
binop131 [label="="];
statement127 -> binop131;
explist132 [label="explist"];
statement127 -> explist132;
term133 [label="term"];
explist132 -> term133;
integer134 [label="1"];
term133 -> integer134;
statement135 [label="statement"];
statementchunk3 -> statement135;
varlist136 [label="varlist"];
statement135 -> varlist136;
var137 [label="var"];
varlist136 -> var137;
identifier138 [label="x"];
var137 -> identifier138;
binop139 [label="="];
statement135 -> binop139;
explist140 [label="explist"];
statement135 -> explist140;
term141 [label="term"];
explist140 -> term141;
integer142 [label="1"];
term141 -> integer142;
statement143 [label="statement"];
statementchunk3 -> statement143;
for144 [label="for"];
statement143 -> for144;
identifier145 [label="i"];
statement143 -> identifier145;
equal146 [label="="];
statement143 -> equal146;
term147 [label="term"];
statement143 -> term147;
integer148 [label="2"];
term147 -> integer148;
comma149 [label=","];
statement143 -> comma149;
term150 [label="term"];
statement143 -> term150;
prefixexp151 [label="prefixexp"];
term150 -> prefixexp151;
var152 [label="var"];
prefixexp151 -> var152;
identifier153 [label="n"];
var152 -> identifier153;
do154 [label="do"];
statement143 -> do154;
block155 [label="block"];
statement143 -> block155;
statementchunk156 [label="statementchunk"];
block155 -> statementchunk156;
statement157 [label="statement"];
statementchunk156 -> statement157;
varlist158 [label="varlist"];
statement157 -> varlist158;
var159 [label="var"];
varlist158 -> var159;
identifier160 [label="x"];
var159 -> identifier160;
binop161 [label="="];
statement157 -> binop161;
explist162 [label="explist"];
statement157 -> explist162;
term163 [label="term"];
explist162 -> term163;
term164 [label="term"];
term163 -> term164;
prefixexp165 [label="prefixexp"];
term164 -> prefixexp165;
var166 [label="var"];
prefixexp165 -> var166;
identifier167 [label="x"];
var166 -> identifier167;
binop168 [label="*"];
term163 -> binop168;
prefixexp169 [label="prefixexp"];
term163 -> prefixexp169;
var170 [label="var"];
prefixexp169 -> var170;
identifier171 [label="i"];
var170 -> identifier171;
end172 [label="end"];
statement143 -> end172;
statement173 [label="statement"];
statementchunk3 -> statement173;
functioncall174 [label="functioncall"];
statement173 -> functioncall174;
prefixexp175 [label="prefixexp"];
functioncall174 -> prefixexp175;
var176 [label="var"];
prefixexp175 -> var176;
prefixexp177 [label="prefixexp"];
var176 -> prefixexp177;
var178 [label="var"];
prefixexp177 -> var178;
identifier179 [label="io"];
var178 -> identifier179;
dot180 [label="."];
var176 -> dot180;
identifier181 [label="write"];
var176 -> identifier181;
args182 [label="args"];
functioncall174 -> args182;
leftparentheses183 [label="("];
args182 -> leftparentheses183;
explist184 [label="explist"];
args182 -> explist184;
term185 [label="term"];
explist184 -> term185;
string186 [label="factorial of "];
term185 -> string186;
rightparentheses187 [label=")"];
args182 -> rightparentheses187;
statement188 [label="statement"];
statementchunk3 -> statement188;
functioncall189 [label="functioncall"];
statement188 -> functioncall189;
prefixexp190 [label="prefixexp"];
functioncall189 -> prefixexp190;
var191 [label="var"];
prefixexp190 -> var191;
prefixexp192 [label="prefixexp"];
var191 -> prefixexp192;
var193 [label="var"];
prefixexp192 -> var193;
identifier194 [label="io"];
var193 -> identifier194;
dot195 [label="."];
var191 -> dot195;
identifier196 [label="write"];
var191 -> identifier196;
args197 [label="args"];
functioncall189 -> args197;
leftparentheses198 [label="("];
args197 -> leftparentheses198;
explist199 [label="explist"];
args197 -> explist199;
term200 [label="term"];
explist199 -> term200;
prefixexp201 [label="prefixexp"];
term200 -> prefixexp201;
var202 [label="var"];
prefixexp201 -> var202;
identifier203 [label="n"];
var202 -> identifier203;
rightparentheses204 [label=")"];
args197 -> rightparentheses204;
statement205 [label="statement"];
statementchunk3 -> statement205;
functioncall206 [label="functioncall"];
statement205 -> functioncall206;
prefixexp207 [label="prefixexp"];
functioncall206 -> prefixexp207;
var208 [label="var"];
prefixexp207 -> var208;
prefixexp209 [label="prefixexp"];
var208 -> prefixexp209;
var210 [label="var"];
prefixexp209 -> var210;
identifier211 [label="io"];
var210 -> identifier211;
dot212 [label="."];
var208 -> dot212;
identifier213 [label="write"];
var208 -> identifier213;
args214 [label="args"];
functioncall206 -> args214;
leftparentheses215 [label="("];
args214 -> leftparentheses215;
explist216 [label="explist"];
args214 -> explist216;
term217 [label="term"];
explist216 -> term217;
string218 [label=" is "];
term217 -> string218;
rightparentheses219 [label=")"];
args214 -> rightparentheses219;
statement220 [label="statement"];
statementchunk3 -> statement220;
functioncall221 [label="functioncall"];
statement220 -> functioncall221;
prefixexp222 [label="prefixexp"];
functioncall221 -> prefixexp222;
var223 [label="var"];
prefixexp222 -> var223;
identifier224 [label="print"];
var223 -> identifier224;
args225 [label="args"];
functioncall221 -> args225;
leftparentheses226 [label="("];
args225 -> leftparentheses226;
explist227 [label="explist"];
args225 -> explist227;
term228 [label="term"];
explist227 -> term228;
prefixexp229 [label="prefixexp"];
term228 -> prefixexp229;
var230 [label="var"];
prefixexp229 -> var230;
identifier231 [label="x"];
var230 -> identifier231;
rightparentheses232 [label=")"];
args225 -> rightparentheses232;
statement233 [label="statement"];
statementchunk3 -> statement233;
functioncall234 [label="functioncall"];
statement233 -> functioncall234;
prefixexp235 [label="prefixexp"];
functioncall234 -> prefixexp235;
var236 [label="var"];
prefixexp235 -> var236;
identifier237 [label="print"];
var236 -> identifier237;
args238 [label="args"];
functioncall234 -> args238;
string239 [label="enter a number:"];
args238 -> string239;
statement240 [label="statement"];
statementchunk3 -> statement240;
varlist241 [label="varlist"];
statement240 -> varlist241;
var242 [label="var"];
varlist241 -> var242;
identifier243 [label="n"];
var242 -> identifier243;
binop244 [label="="];
statement240 -> binop244;
explist245 [label="explist"];
statement240 -> explist245;
term246 [label="term"];
explist245 -> term246;
prefixexp247 [label="prefixexp"];
term246 -> prefixexp247;
functioncall248 [label="functioncall"];
prefixexp247 -> functioncall248;
prefixexp249 [label="prefixexp"];
functioncall248 -> prefixexp249;
var250 [label="var"];
prefixexp249 -> var250;
prefixexp251 [label="prefixexp"];
var250 -> prefixexp251;
var252 [label="var"];
prefixexp251 -> var252;
identifier253 [label="io"];
var252 -> identifier253;
dot254 [label="."];
var250 -> dot254;
identifier255 [label="read"];
var250 -> identifier255;
args256 [label="args"];
functioncall248 -> args256;
leftparentheses257 [label="("];
args256 -> leftparentheses257;
explist258 [label="explist"];
args256 -> explist258;
term259 [label="term"];
explist258 -> term259;
string260 [label="*number"];
term259 -> string260;
rightparentheses261 [label=")"];
args256 -> rightparentheses261;
statement262 [label="statement"];
statementchunk3 -> statement262;
for263 [label="for"];
statement262 -> for263;
identifier264 [label="i"];
statement262 -> identifier264;
equal265 [label="="];
statement262 -> equal265;
term266 [label="term"];
statement262 -> term266;
integer267 [label="2"];
term266 -> integer267;
comma268 [label=","];
statement262 -> comma268;
term269 [label="term"];
statement262 -> term269;
prefixexp270 [label="prefixexp"];
term269 -> prefixexp270;
var271 [label="var"];
prefixexp270 -> var271;
identifier272 [label="n"];
var271 -> identifier272;
do273 [label="do"];
statement262 -> do273;
block274 [label="block"];
statement262 -> block274;
statementchunk275 [label="statementchunk"];
block274 -> statementchunk275;
statement276 [label="statement"];
statementchunk275 -> statement276;
if277 [label="if"];
statement276 -> if277;
term278 [label="term"];
statement276 -> term278;
term279 [label="term"];
term278 -> term279;
term280 [label="term"];
term279 -> term280;
prefixexp281 [label="prefixexp"];
term280 -> prefixexp281;
var282 [label="var"];
prefixexp281 -> var282;
identifier283 [label="n"];
var282 -> identifier283;
binop284 [label="%"];
term279 -> binop284;
prefixexp285 [label="prefixexp"];
term279 -> prefixexp285;
var286 [label="var"];
prefixexp285 -> var286;
identifier287 [label="i"];
var286 -> identifier287;
binop288 [label="=="];
term278 -> binop288;
integer289 [label="0"];
term278 -> integer289;
then290 [label="then"];
statement276 -> then290;
block291 [label="block"];
statement276 -> block291;
statementchunk292 [label="statementchunk"];
block291 -> statementchunk292;
statement293 [label="statement"];
statementchunk292 -> statement293;
functioncall294 [label="functioncall"];
statement293 -> functioncall294;
prefixexp295 [label="prefixexp"];
functioncall294 -> prefixexp295;
var296 [label="var"];
prefixexp295 -> var296;
prefixexp297 [label="prefixexp"];
var296 -> prefixexp297;
var298 [label="var"];
prefixexp297 -> var298;
identifier299 [label="io"];
var298 -> identifier299;
dot300 [label="."];
var296 -> dot300;
identifier301 [label="write"];
var296 -> identifier301;
args302 [label="args"];
functioncall294 -> args302;
leftparentheses303 [label="("];
args302 -> leftparentheses303;
explist304 [label="explist"];
args302 -> explist304;
term305 [label="term"];
explist304 -> term305;
prefixexp306 [label="prefixexp"];
term305 -> prefixexp306;
var307 [label="var"];
prefixexp306 -> var307;
identifier308 [label="i"];
var307 -> identifier308;
rightparentheses309 [label=")"];
args302 -> rightparentheses309;
statement310 [label="statement"];
statementchunk292 -> statement310;
functioncall311 [label="functioncall"];
statement310 -> functioncall311;
prefixexp312 [label="prefixexp"];
functioncall311 -> prefixexp312;
var313 [label="var"];
prefixexp312 -> var313;
prefixexp314 [label="prefixexp"];
var313 -> prefixexp314;
var315 [label="var"];
prefixexp314 -> var315;
identifier316 [label="io"];
var315 -> identifier316;
dot317 [label="."];
var313 -> dot317;
identifier318 [label="write"];
var313 -> identifier318;
args319 [label="args"];
functioncall311 -> args319;
leftparentheses320 [label="("];
args319 -> leftparentheses320;
explist321 [label="explist"];
args319 -> explist321;
term322 [label="term"];
explist321 -> term322;
string323 [label=" is a factor of "];
term322 -> string323;
rightparentheses324 [label=")"];
args319 -> rightparentheses324;
statement325 [label="statement"];
statementchunk292 -> statement325;
functioncall326 [label="functioncall"];
statement325 -> functioncall326;
prefixexp327 [label="prefixexp"];
functioncall326 -> prefixexp327;
var328 [label="var"];
prefixexp327 -> var328;
identifier329 [label="print"];
var328 -> identifier329;
args330 [label="args"];
functioncall326 -> args330;
leftparentheses331 [label="("];
args330 -> leftparentheses331;
explist332 [label="explist"];
args330 -> explist332;
term333 [label="term"];
explist332 -> term333;
prefixexp334 [label="prefixexp"];
term333 -> prefixexp334;
var335 [label="var"];
prefixexp334 -> var335;
identifier336 [label="n"];
var335 -> identifier336;
rightparentheses337 [label=")"];
args330 -> rightparentheses337;
statement338 [label="statement"];
statementchunk292 -> statement338;
functioncall339 [label="functioncall"];
statement338 -> functioncall339;
prefixexp340 [label="prefixexp"];
functioncall339 -> prefixexp340;
var341 [label="var"];
prefixexp340 -> var341;
identifier342 [label="print"];
var341 -> identifier342;
args343 [label="args"];
functioncall339 -> args343;
string344 [label=" "];
args343 -> string344;
end345 [label="end"];
statement276 -> end345;
end346 [label="end"];
statement262 -> end346;

}