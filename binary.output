State 22 conflicts: 1 reduce/reduce
State 47 conflicts: 2 shift/reduce
State 53 conflicts: 1 shift/reduce
State 79 conflicts: 1 shift/reduce


Grammar

    0 $accept: S "end of file"

    1 S: block

    2 block: chunk

    3 chunk: %empty
    4      | chunk_layer
    5      | chunk_layer laststat_layer
    6      | laststat_layer

    7 chunk_layer: stat
    8            | stat SEMICOLON
    9            | chunk_layer stat
   10            | chunk_layer stat SEMICOLON

   11 laststat_layer: laststat
   12               | laststat SEMICOLON

   13 stat: varlist EQUAL explist
   14     | functioncall
   15     | DO block end
   16     | WHILE exp DO block end
   17     | REPEAT block UNTIL exp
   18     | IF exp THEN block end
   19     | IF exp THEN block ELSE block end
   20     | IF exp THEN block elseif_layer end
   21     | IF exp THEN block elseif_layer ELSE block end
   22     | FOR Name EQUAL exp COMMA exp DO block end
   23     | FOR Name EQUAL exp COMMA exp COMMA exp DO block end
   24     | FOR namelist IN explist DO block end
   25     | FUNCTION funcname funcbody
   26     | LOCAL FUNCTION Name funcbody
   27     | LOCAL namelist
   28     | LOCAL namelist EQUAL explist

   29 elseif_layer: ELSEIF exp THEN block
   30             | elseif_layer ELSEIF exp THEN block

   31 laststat: RETURN
   32         | RETURN explist
   33         | BREAK

   34 funcname: Name
   35         | Name COLON Name
   36         | Name funcname_layer
   37         | Name funcname_layer COLON Name

   38 funcname_layer: DOT Name
   39               | funcname_layer DOT Name

   40 varlist: var
   41        | var varlist_layer

   42 varlist_layer: COMMA var
   43              | varlist_layer COMMA var

   44 var: Name
   45    | prefixexp LEFTBRACKET exp RIGHTBRACKET
   46    | prefixexp DOT Name

   47 namelist: Name
   48         | Name namelist_layer

   49 namelist_layer: COMMA Name
   50               | namelist_layer COMMA Name

   51 explist: exp
   52        | explist_layer exp

   53 explist_layer: exp COMMA
   54              | explist_layer exp COMMA

   55 exp: exp_layer
   56    | exp_rec binop exp_layer
   57    | unop exp_layer

   58 exp_rec: exp_layer
   59        | exp_rec binop

   60 exp_layer: NIL
   61          | FALSE
   62          | TRUE
   63          | Number
   64          | String
   65          | DOTDOTDOT
   66          | function
   67          | prefixexp
   68          | tableconstructor

   69 Number: INTEGER
   70       | DECIMAL
   71       | POWEROF
   72       | HEXADECIMAL

   73 prefixexp: var
   74          | functioncall
   75          | LEFTPARENTHESES exp RIGHTPARENTHESES

   76 functioncall: prefixexp args
   77             | prefixexp COLON Name args

   78 args: LEFTPARENTHESES RIGHTPARENTHESES
   79     | LEFTPARENTHESES parlist RIGHTPARENTHESES
   80     | tableconstructor
   81     | String

   82 function: FUNCTION funcbody

   83 funcbody: LEFTPARENTHESES RIGHTPARENTHESES block end
   84         | LEFTPARENTHESES parlist RIGHTPARENTHESES block end

   85 parlist: namelist
   86        | namelist COMMA DOTDOTDOT
   87        | DOTDOTDOT

   88 tableconstructor: LEFTBRACES RIGHTBRACES
   89                 | LEFTBRACES fieldlist RIGHTBRACES

   90 fieldlist: field
   91          | field fieldlist_layer
   92          | field fieldsep
   93          | field fieldlist_layer fieldsep

   94 fieldlist_layer: fieldsep field
   95                | fieldlist_layer fieldsep field

   96 field: LEFTBRACKET exp RIGHTBRACKET EQUAL exp
   97      | Name EQUAL exp
   98      | exp

   99 fieldsep: COLON
  100         | SEMICOLON

  101 binop: PLUS
  102      | MINUS
  103      | MULTIPLY
  104      | FORWARDSLASH
  105      | CARET
  106      | PERCENT
  107      | DOTDOT
  108      | LESSTHAN
  109      | LESSOREQUAL
  110      | GREATERTHAN
  111      | GREATEROREQUAL
  112      | EQUALTO
  113      | TILDEEQUAL
  114      | AND
  115      | OR

  116 unop: MINUS
  117     | NOT
  118     | HASHTAG


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
AND (258) 114
BREAK (259) 33
DO (260) 15 16 22 23 24
ELSE (261) 19 21
ELSEIF (262) 29 30
end (263) 15 16 18 19 20 21 22 23 24 83 84
FALSE (264) 61
FOR (265) 22 23 24
FUNCTION (266) 25 26 82
IF (267) 18 19 20 21
IN (268) 24
LOCAL (269) 26 27 28
NIL (270) 60
NOT (271) 117
OR (272) 115
REPEAT (273) 17
RETURN (274) 31 32
THEN (275) 18 19 20 21 29 30
TRUE (276) 62
UNTIL (277) 17
WHILE (278) 16
PLUS (279) 101
MINUS (280) 102 116
MULTIPLY (281) 103
FORWARDSLASH (282) 104
PERCENT (283) 106
CARET (284) 105
HASHTAG (285) 118
EQUALTO (286) 112
TILDEEQUAL (287) 113
LESSOREQUAL (288) 109
GREATEROREQUAL (289) 111
LESSTHAN (290) 108
GREATERTHAN (291) 110
EQUAL (292) 13 22 23 28 96 97
LEFTPARENTHESES (293) 75 78 79 83 84
RIGHTPARENTHESES (294) 75 78 79 83 84
LEFTBRACES (295) 88 89
RIGHTBRACES (296) 88 89
LEFTBRACKET (297) 45 96
RIGHTBRACKET (298) 45 96
SEMICOLON (299) 8 10 12 100
COLON (300) 35 37 77 99
COMMA (301) 22 23 42 43 49 50 53 54 86
DOT (302) 38 39 46
DOTDOT (303) 107
DOTDOTDOT (304) 65 86 87
INTEGER (305) 69
DECIMAL (306) 70
POWEROF (307) 71
HEXADECIMAL (308) 72
String (309) 64 81
Name (310) 22 23 26 34 35 36 37 38 39 44 46 47 48 49 50 77 97


Nonterminals, with rules where they appear

$accept (56)
    on left: 0
S (57)
    on left: 1, on right: 0
block (58)
    on left: 2, on right: 1 15 16 17 18 19 20 21 22 23 24 29 30 83
    84
chunk (59)
    on left: 3 4 5 6, on right: 2
chunk_layer (60)
    on left: 7 8 9 10, on right: 4 5 9 10
laststat_layer (61)
    on left: 11 12, on right: 5 6
stat (62)
    on left: 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28, on right:
    7 8 9 10
elseif_layer (63)
    on left: 29 30, on right: 20 21 30
laststat (64)
    on left: 31 32 33, on right: 11 12
funcname (65)
    on left: 34 35 36 37, on right: 25
funcname_layer (66)
    on left: 38 39, on right: 36 37 39
varlist (67)
    on left: 40 41, on right: 13
varlist_layer (68)
    on left: 42 43, on right: 41 43
var (69)
    on left: 44 45 46, on right: 40 41 42 43 73
namelist (70)
    on left: 47 48, on right: 24 27 28 85 86
namelist_layer (71)
    on left: 49 50, on right: 48 50
explist (72)
    on left: 51 52, on right: 13 24 28 32
explist_layer (73)
    on left: 53 54, on right: 52 54
exp (74)
    on left: 55 56 57, on right: 16 17 18 19 20 21 22 23 29 30 45 51
    52 53 54 75 96 97 98
exp_rec (75)
    on left: 58 59, on right: 56 59
exp_layer (76)
    on left: 60 61 62 63 64 65 66 67 68, on right: 55 56 57 58
Number (77)
    on left: 69 70 71 72, on right: 63
prefixexp (78)
    on left: 73 74 75, on right: 45 46 67 76 77
functioncall (79)
    on left: 76 77, on right: 14 74
args (80)
    on left: 78 79 80 81, on right: 76 77
function (81)
    on left: 82, on right: 66
funcbody (82)
    on left: 83 84, on right: 25 26 82
parlist (83)
    on left: 85 86 87, on right: 79 84
tableconstructor (84)
    on left: 88 89, on right: 68 80
fieldlist (85)
    on left: 90 91 92 93, on right: 89
fieldlist_layer (86)
    on left: 94 95, on right: 91 93 95
field (87)
    on left: 96 97 98, on right: 90 91 92 93 94 95
fieldsep (88)
    on left: 99 100, on right: 92 93 94 95
binop (89)
    on left: 101 102 103 104 105 106 107 108 109 110 111 112 113 114
    115, on right: 56 59
unop (90)
    on left: 116 117 118, on right: 57


State 0

    0 $accept: . S "end of file"

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    S               go to state 12
    block           go to state 13
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 1

   33 laststat: BREAK .

    $default  reduce using rule 33 (laststat)


State 2

   15 stat: DO . block end

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 23
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 3

   22 stat: FOR . Name EQUAL exp COMMA exp DO block end
   23     | FOR . Name EQUAL exp COMMA exp COMMA exp DO block end
   24     | FOR . namelist IN explist DO block end

    Name  shift, and go to state 24

    namelist  go to state 25


State 4

   25 stat: FUNCTION . funcname funcbody

    Name  shift, and go to state 26

    funcname  go to state 27


State 5

   18 stat: IF . exp THEN block end
   19     | IF . exp THEN block ELSE block end
   20     | IF . exp THEN block elseif_layer end
   21     | IF . exp THEN block elseif_layer ELSE block end

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 43
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 6

   26 stat: LOCAL . FUNCTION Name funcbody
   27     | LOCAL . namelist
   28     | LOCAL . namelist EQUAL explist

    FUNCTION  shift, and go to state 52
    Name      shift, and go to state 53

    namelist  go to state 54


State 7

   17 stat: REPEAT . block UNTIL exp

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 55
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 8

   31 laststat: RETURN .
   32         | RETURN . explist

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    $default  reduce using rule 31 (laststat)

    var               go to state 42
    explist           go to state 56
    explist_layer     go to state 57
    exp               go to state 58
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 9

   16 stat: WHILE . exp DO block end

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 59
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 10

   75 prefixexp: LEFTPARENTHESES . exp RIGHTPARENTHESES

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 60
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 11

   44 var: Name .

    $default  reduce using rule 44 (var)


State 12

    0 $accept: S . "end of file"

    "end of file"  shift, and go to state 61


State 13

    1 S: block .

    $default  reduce using rule 1 (S)


State 14

    2 block: chunk .

    $default  reduce using rule 2 (block)


State 15

    4 chunk: chunk_layer .
    5      | chunk_layer . laststat_layer
    9 chunk_layer: chunk_layer . stat
   10            | chunk_layer . stat SEMICOLON

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 4 (chunk)

    laststat_layer  go to state 62
    stat            go to state 63
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 16

    6 chunk: laststat_layer .

    $default  reduce using rule 6 (chunk)


State 17

    7 chunk_layer: stat .
    8            | stat . SEMICOLON

    SEMICOLON  shift, and go to state 64

    $default  reduce using rule 7 (chunk_layer)


State 18

   11 laststat_layer: laststat .
   12               | laststat . SEMICOLON

    SEMICOLON  shift, and go to state 65

    $default  reduce using rule 11 (laststat_layer)


State 19

   13 stat: varlist . EQUAL explist

    EQUAL  shift, and go to state 66


State 20

   40 varlist: var .
   41        | var . varlist_layer
   73 prefixexp: var .

    COMMA  shift, and go to state 67

    EQUAL     reduce using rule 40 (varlist)
    $default  reduce using rule 73 (prefixexp)

    varlist_layer  go to state 68


State 21

   45 var: prefixexp . LEFTBRACKET exp RIGHTBRACKET
   46    | prefixexp . DOT Name
   76 functioncall: prefixexp . args
   77             | prefixexp . COLON Name args

    LEFTPARENTHESES  shift, and go to state 69
    LEFTBRACES       shift, and go to state 35
    LEFTBRACKET      shift, and go to state 70
    COLON            shift, and go to state 71
    DOT              shift, and go to state 72
    String           shift, and go to state 73

    args              go to state 74
    tableconstructor  go to state 75


State 22

   14 stat: functioncall .
   74 prefixexp: functioncall .

    LEFTPARENTHESES  reduce using rule 14 (stat)
    LEFTPARENTHESES  [reduce using rule 74 (prefixexp)]
    LEFTBRACES       reduce using rule 74 (prefixexp)
    LEFTBRACKET      reduce using rule 74 (prefixexp)
    COLON            reduce using rule 74 (prefixexp)
    DOT              reduce using rule 74 (prefixexp)
    String           reduce using rule 74 (prefixexp)
    $default         reduce using rule 14 (stat)


State 23

   15 stat: DO block . end

    end  shift, and go to state 76


State 24

   22 stat: FOR Name . EQUAL exp COMMA exp DO block end
   23     | FOR Name . EQUAL exp COMMA exp COMMA exp DO block end
   47 namelist: Name .
   48         | Name . namelist_layer

    EQUAL  shift, and go to state 77
    COMMA  shift, and go to state 78

    $default  reduce using rule 47 (namelist)

    namelist_layer  go to state 79


State 25

   24 stat: FOR namelist . IN explist DO block end

    IN  shift, and go to state 80


State 26

   34 funcname: Name .
   35         | Name . COLON Name
   36         | Name . funcname_layer
   37         | Name . funcname_layer COLON Name

    COLON  shift, and go to state 81
    DOT    shift, and go to state 82

    $default  reduce using rule 34 (funcname)

    funcname_layer  go to state 83


State 27

   25 stat: FUNCTION funcname . funcbody

    LEFTPARENTHESES  shift, and go to state 84

    funcbody  go to state 85


State 28

   61 exp_layer: FALSE .

    $default  reduce using rule 61 (exp_layer)


State 29

   82 function: FUNCTION . funcbody

    LEFTPARENTHESES  shift, and go to state 84

    funcbody  go to state 86


State 30

   60 exp_layer: NIL .

    $default  reduce using rule 60 (exp_layer)


State 31

  117 unop: NOT .

    $default  reduce using rule 117 (unop)


State 32

   62 exp_layer: TRUE .

    $default  reduce using rule 62 (exp_layer)


State 33

  116 unop: MINUS .

    $default  reduce using rule 116 (unop)


State 34

  118 unop: HASHTAG .

    $default  reduce using rule 118 (unop)


State 35

   88 tableconstructor: LEFTBRACES . RIGHTBRACES
   89                 | LEFTBRACES . fieldlist RIGHTBRACES

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    RIGHTBRACES      shift, and go to state 87
    LEFTBRACKET      shift, and go to state 88
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 89

    var               go to state 42
    exp               go to state 90
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    fieldlist         go to state 91
    field             go to state 92
    unop              go to state 51


State 36

   65 exp_layer: DOTDOTDOT .

    $default  reduce using rule 65 (exp_layer)


State 37

   69 Number: INTEGER .

    $default  reduce using rule 69 (Number)


State 38

   70 Number: DECIMAL .

    $default  reduce using rule 70 (Number)


State 39

   71 Number: POWEROF .

    $default  reduce using rule 71 (Number)


State 40

   72 Number: HEXADECIMAL .

    $default  reduce using rule 72 (Number)


State 41

   64 exp_layer: String .

    $default  reduce using rule 64 (exp_layer)


State 42

   73 prefixexp: var .

    $default  reduce using rule 73 (prefixexp)


State 43

   18 stat: IF exp . THEN block end
   19     | IF exp . THEN block ELSE block end
   20     | IF exp . THEN block elseif_layer end
   21     | IF exp . THEN block elseif_layer ELSE block end

    THEN  shift, and go to state 93


State 44

   56 exp: exp_rec . binop exp_layer
   59 exp_rec: exp_rec . binop

    AND             shift, and go to state 94
    OR              shift, and go to state 95
    PLUS            shift, and go to state 96
    MINUS           shift, and go to state 97
    MULTIPLY        shift, and go to state 98
    FORWARDSLASH    shift, and go to state 99
    PERCENT         shift, and go to state 100
    CARET           shift, and go to state 101
    EQUALTO         shift, and go to state 102
    TILDEEQUAL      shift, and go to state 103
    LESSOREQUAL     shift, and go to state 104
    GREATEROREQUAL  shift, and go to state 105
    LESSTHAN        shift, and go to state 106
    GREATERTHAN     shift, and go to state 107
    DOTDOT          shift, and go to state 108

    binop  go to state 109


State 45

   55 exp: exp_layer .
   58 exp_rec: exp_layer .

    AND             reduce using rule 58 (exp_rec)
    OR              reduce using rule 58 (exp_rec)
    PLUS            reduce using rule 58 (exp_rec)
    MINUS           reduce using rule 58 (exp_rec)
    MULTIPLY        reduce using rule 58 (exp_rec)
    FORWARDSLASH    reduce using rule 58 (exp_rec)
    PERCENT         reduce using rule 58 (exp_rec)
    CARET           reduce using rule 58 (exp_rec)
    EQUALTO         reduce using rule 58 (exp_rec)
    TILDEEQUAL      reduce using rule 58 (exp_rec)
    LESSOREQUAL     reduce using rule 58 (exp_rec)
    GREATEROREQUAL  reduce using rule 58 (exp_rec)
    LESSTHAN        reduce using rule 58 (exp_rec)
    GREATERTHAN     reduce using rule 58 (exp_rec)
    DOTDOT          reduce using rule 58 (exp_rec)
    $default        reduce using rule 55 (exp)


State 46

   63 exp_layer: Number .

    $default  reduce using rule 63 (exp_layer)


State 47

   45 var: prefixexp . LEFTBRACKET exp RIGHTBRACKET
   46    | prefixexp . DOT Name
   67 exp_layer: prefixexp .
   76 functioncall: prefixexp . args
   77             | prefixexp . COLON Name args

    LEFTPARENTHESES  shift, and go to state 69
    LEFTBRACES       shift, and go to state 35
    LEFTBRACKET      shift, and go to state 70
    COLON            shift, and go to state 71
    DOT              shift, and go to state 72
    String           shift, and go to state 73

    LEFTPARENTHESES  [reduce using rule 67 (exp_layer)]
    COLON            [reduce using rule 67 (exp_layer)]
    $default         reduce using rule 67 (exp_layer)

    args              go to state 74
    tableconstructor  go to state 75


State 48

   74 prefixexp: functioncall .

    $default  reduce using rule 74 (prefixexp)


State 49

   66 exp_layer: function .

    $default  reduce using rule 66 (exp_layer)


State 50

   68 exp_layer: tableconstructor .

    $default  reduce using rule 68 (exp_layer)


State 51

   57 exp: unop . exp_layer

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    TRUE             shift, and go to state 32
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp_layer         go to state 110
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50


State 52

   26 stat: LOCAL FUNCTION . Name funcbody

    Name  shift, and go to state 111


State 53

   47 namelist: Name .
   48         | Name . namelist_layer

    COMMA  shift, and go to state 78

    COMMA     [reduce using rule 47 (namelist)]
    $default  reduce using rule 47 (namelist)

    namelist_layer  go to state 79


State 54

   27 stat: LOCAL namelist .
   28     | LOCAL namelist . EQUAL explist

    EQUAL  shift, and go to state 112

    $default  reduce using rule 27 (stat)


State 55

   17 stat: REPEAT block . UNTIL exp

    UNTIL  shift, and go to state 113


State 56

   32 laststat: RETURN explist .

    $default  reduce using rule 32 (laststat)


State 57

   52 explist: explist_layer . exp
   54 explist_layer: explist_layer . exp COMMA

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 114
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 58

   51 explist: exp .
   53 explist_layer: exp . COMMA

    COMMA  shift, and go to state 115

    $default  reduce using rule 51 (explist)


State 59

   16 stat: WHILE exp . DO block end

    DO  shift, and go to state 116


State 60

   75 prefixexp: LEFTPARENTHESES exp . RIGHTPARENTHESES

    RIGHTPARENTHESES  shift, and go to state 117


State 61

    0 $accept: S "end of file" .

    $default  accept


State 62

    5 chunk: chunk_layer laststat_layer .

    $default  reduce using rule 5 (chunk)


State 63

    9 chunk_layer: chunk_layer stat .
   10            | chunk_layer stat . SEMICOLON

    SEMICOLON  shift, and go to state 118

    $default  reduce using rule 9 (chunk_layer)


State 64

    8 chunk_layer: stat SEMICOLON .

    $default  reduce using rule 8 (chunk_layer)


State 65

   12 laststat_layer: laststat SEMICOLON .

    $default  reduce using rule 12 (laststat_layer)


State 66

   13 stat: varlist EQUAL . explist

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    explist           go to state 119
    explist_layer     go to state 57
    exp               go to state 58
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 67

   42 varlist_layer: COMMA . var

    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    var           go to state 120
    prefixexp     go to state 21
    functioncall  go to state 48


State 68

   41 varlist: var varlist_layer .
   43 varlist_layer: varlist_layer . COMMA var

    COMMA  shift, and go to state 121

    $default  reduce using rule 41 (varlist)


State 69

   78 args: LEFTPARENTHESES . RIGHTPARENTHESES
   79     | LEFTPARENTHESES . parlist RIGHTPARENTHESES

    RIGHTPARENTHESES  shift, and go to state 122
    DOTDOTDOT         shift, and go to state 123
    Name              shift, and go to state 53

    namelist  go to state 124
    parlist   go to state 125


State 70

   45 var: prefixexp LEFTBRACKET . exp RIGHTBRACKET

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 126
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 71

   77 functioncall: prefixexp COLON . Name args

    Name  shift, and go to state 127


State 72

   46 var: prefixexp DOT . Name

    Name  shift, and go to state 128


State 73

   81 args: String .

    $default  reduce using rule 81 (args)


State 74

   76 functioncall: prefixexp args .

    $default  reduce using rule 76 (functioncall)


State 75

   80 args: tableconstructor .

    $default  reduce using rule 80 (args)


State 76

   15 stat: DO block end .

    $default  reduce using rule 15 (stat)


State 77

   22 stat: FOR Name EQUAL . exp COMMA exp DO block end
   23     | FOR Name EQUAL . exp COMMA exp COMMA exp DO block end

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 129
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 78

   49 namelist_layer: COMMA . Name

    Name  shift, and go to state 130


State 79

   48 namelist: Name namelist_layer .
   50 namelist_layer: namelist_layer . COMMA Name

    COMMA  shift, and go to state 131

    COMMA     [reduce using rule 48 (namelist)]
    $default  reduce using rule 48 (namelist)


State 80

   24 stat: FOR namelist IN . explist DO block end

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    explist           go to state 132
    explist_layer     go to state 57
    exp               go to state 58
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 81

   35 funcname: Name COLON . Name

    Name  shift, and go to state 133


State 82

   38 funcname_layer: DOT . Name

    Name  shift, and go to state 134


State 83

   36 funcname: Name funcname_layer .
   37         | Name funcname_layer . COLON Name
   39 funcname_layer: funcname_layer . DOT Name

    COLON  shift, and go to state 135
    DOT    shift, and go to state 136

    $default  reduce using rule 36 (funcname)


State 84

   83 funcbody: LEFTPARENTHESES . RIGHTPARENTHESES block end
   84         | LEFTPARENTHESES . parlist RIGHTPARENTHESES block end

    RIGHTPARENTHESES  shift, and go to state 137
    DOTDOTDOT         shift, and go to state 123
    Name              shift, and go to state 53

    namelist  go to state 124
    parlist   go to state 138


State 85

   25 stat: FUNCTION funcname funcbody .

    $default  reduce using rule 25 (stat)


State 86

   82 function: FUNCTION funcbody .

    $default  reduce using rule 82 (function)


State 87

   88 tableconstructor: LEFTBRACES RIGHTBRACES .

    $default  reduce using rule 88 (tableconstructor)


State 88

   96 field: LEFTBRACKET . exp RIGHTBRACKET EQUAL exp

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 139
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 89

   44 var: Name .
   97 field: Name . EQUAL exp

    EQUAL  shift, and go to state 140

    $default  reduce using rule 44 (var)


State 90

   98 field: exp .

    $default  reduce using rule 98 (field)


State 91

   89 tableconstructor: LEFTBRACES fieldlist . RIGHTBRACES

    RIGHTBRACES  shift, and go to state 141


State 92

   90 fieldlist: field .
   91          | field . fieldlist_layer
   92          | field . fieldsep
   93          | field . fieldlist_layer fieldsep

    SEMICOLON  shift, and go to state 142
    COLON      shift, and go to state 143

    $default  reduce using rule 90 (fieldlist)

    fieldlist_layer  go to state 144
    fieldsep         go to state 145


State 93

   18 stat: IF exp THEN . block end
   19     | IF exp THEN . block ELSE block end
   20     | IF exp THEN . block elseif_layer end
   21     | IF exp THEN . block elseif_layer ELSE block end

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 146
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 94

  114 binop: AND .

    $default  reduce using rule 114 (binop)


State 95

  115 binop: OR .

    $default  reduce using rule 115 (binop)


State 96

  101 binop: PLUS .

    $default  reduce using rule 101 (binop)


State 97

  102 binop: MINUS .

    $default  reduce using rule 102 (binop)


State 98

  103 binop: MULTIPLY .

    $default  reduce using rule 103 (binop)


State 99

  104 binop: FORWARDSLASH .

    $default  reduce using rule 104 (binop)


State 100

  106 binop: PERCENT .

    $default  reduce using rule 106 (binop)


State 101

  105 binop: CARET .

    $default  reduce using rule 105 (binop)


State 102

  112 binop: EQUALTO .

    $default  reduce using rule 112 (binop)


State 103

  113 binop: TILDEEQUAL .

    $default  reduce using rule 113 (binop)


State 104

  109 binop: LESSOREQUAL .

    $default  reduce using rule 109 (binop)


State 105

  111 binop: GREATEROREQUAL .

    $default  reduce using rule 111 (binop)


State 106

  108 binop: LESSTHAN .

    $default  reduce using rule 108 (binop)


State 107

  110 binop: GREATERTHAN .

    $default  reduce using rule 110 (binop)


State 108

  107 binop: DOTDOT .

    $default  reduce using rule 107 (binop)


State 109

   56 exp: exp_rec binop . exp_layer
   59 exp_rec: exp_rec binop .

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    TRUE             shift, and go to state 32
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    $default  reduce using rule 59 (exp_rec)

    var               go to state 42
    exp_layer         go to state 147
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50


State 110

   57 exp: unop exp_layer .

    $default  reduce using rule 57 (exp)


State 111

   26 stat: LOCAL FUNCTION Name . funcbody

    LEFTPARENTHESES  shift, and go to state 84

    funcbody  go to state 148


State 112

   28 stat: LOCAL namelist EQUAL . explist

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    explist           go to state 149
    explist_layer     go to state 57
    exp               go to state 58
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 113

   17 stat: REPEAT block UNTIL . exp

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 150
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 114

   52 explist: explist_layer exp .
   54 explist_layer: explist_layer exp . COMMA

    COMMA  shift, and go to state 151

    $default  reduce using rule 52 (explist)


State 115

   53 explist_layer: exp COMMA .

    $default  reduce using rule 53 (explist_layer)


State 116

   16 stat: WHILE exp DO . block end

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 152
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 117

   75 prefixexp: LEFTPARENTHESES exp RIGHTPARENTHESES .

    $default  reduce using rule 75 (prefixexp)


State 118

   10 chunk_layer: chunk_layer stat SEMICOLON .

    $default  reduce using rule 10 (chunk_layer)


State 119

   13 stat: varlist EQUAL explist .

    $default  reduce using rule 13 (stat)


State 120

   42 varlist_layer: COMMA var .
   73 prefixexp: var .

    EQUAL     reduce using rule 42 (varlist_layer)
    COMMA     reduce using rule 42 (varlist_layer)
    $default  reduce using rule 73 (prefixexp)


State 121

   43 varlist_layer: varlist_layer COMMA . var

    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    var           go to state 153
    prefixexp     go to state 21
    functioncall  go to state 48


State 122

   78 args: LEFTPARENTHESES RIGHTPARENTHESES .

    $default  reduce using rule 78 (args)


State 123

   87 parlist: DOTDOTDOT .

    $default  reduce using rule 87 (parlist)


State 124

   85 parlist: namelist .
   86        | namelist . COMMA DOTDOTDOT

    COMMA  shift, and go to state 154

    $default  reduce using rule 85 (parlist)


State 125

   79 args: LEFTPARENTHESES parlist . RIGHTPARENTHESES

    RIGHTPARENTHESES  shift, and go to state 155


State 126

   45 var: prefixexp LEFTBRACKET exp . RIGHTBRACKET

    RIGHTBRACKET  shift, and go to state 156


State 127

   77 functioncall: prefixexp COLON Name . args

    LEFTPARENTHESES  shift, and go to state 69
    LEFTBRACES       shift, and go to state 35
    String           shift, and go to state 73

    args              go to state 157
    tableconstructor  go to state 75


State 128

   46 var: prefixexp DOT Name .

    $default  reduce using rule 46 (var)


State 129

   22 stat: FOR Name EQUAL exp . COMMA exp DO block end
   23     | FOR Name EQUAL exp . COMMA exp COMMA exp DO block end

    COMMA  shift, and go to state 158


State 130

   49 namelist_layer: COMMA Name .

    $default  reduce using rule 49 (namelist_layer)


State 131

   50 namelist_layer: namelist_layer COMMA . Name

    Name  shift, and go to state 159


State 132

   24 stat: FOR namelist IN explist . DO block end

    DO  shift, and go to state 160


State 133

   35 funcname: Name COLON Name .

    $default  reduce using rule 35 (funcname)


State 134

   38 funcname_layer: DOT Name .

    $default  reduce using rule 38 (funcname_layer)


State 135

   37 funcname: Name funcname_layer COLON . Name

    Name  shift, and go to state 161


State 136

   39 funcname_layer: funcname_layer DOT . Name

    Name  shift, and go to state 162


State 137

   83 funcbody: LEFTPARENTHESES RIGHTPARENTHESES . block end

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 163
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 138

   84 funcbody: LEFTPARENTHESES parlist . RIGHTPARENTHESES block end

    RIGHTPARENTHESES  shift, and go to state 164


State 139

   96 field: LEFTBRACKET exp . RIGHTBRACKET EQUAL exp

    RIGHTBRACKET  shift, and go to state 165


State 140

   97 field: Name EQUAL . exp

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 166
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 141

   89 tableconstructor: LEFTBRACES fieldlist RIGHTBRACES .

    $default  reduce using rule 89 (tableconstructor)


State 142

  100 fieldsep: SEMICOLON .

    $default  reduce using rule 100 (fieldsep)


State 143

   99 fieldsep: COLON .

    $default  reduce using rule 99 (fieldsep)


State 144

   91 fieldlist: field fieldlist_layer .
   93          | field fieldlist_layer . fieldsep
   95 fieldlist_layer: fieldlist_layer . fieldsep field

    SEMICOLON  shift, and go to state 142
    COLON      shift, and go to state 143

    $default  reduce using rule 91 (fieldlist)

    fieldsep  go to state 167


State 145

   92 fieldlist: field fieldsep .
   94 fieldlist_layer: fieldsep . field

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    LEFTBRACKET      shift, and go to state 88
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 89

    $default  reduce using rule 92 (fieldlist)

    var               go to state 42
    exp               go to state 90
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    field             go to state 168
    unop              go to state 51


State 146

   18 stat: IF exp THEN block . end
   19     | IF exp THEN block . ELSE block end
   20     | IF exp THEN block . elseif_layer end
   21     | IF exp THEN block . elseif_layer ELSE block end

    ELSE    shift, and go to state 169
    ELSEIF  shift, and go to state 170
    end     shift, and go to state 171

    elseif_layer  go to state 172


State 147

   56 exp: exp_rec binop exp_layer .

    $default  reduce using rule 56 (exp)


State 148

   26 stat: LOCAL FUNCTION Name funcbody .

    $default  reduce using rule 26 (stat)


State 149

   28 stat: LOCAL namelist EQUAL explist .

    $default  reduce using rule 28 (stat)


State 150

   17 stat: REPEAT block UNTIL exp .

    $default  reduce using rule 17 (stat)


State 151

   54 explist_layer: explist_layer exp COMMA .

    $default  reduce using rule 54 (explist_layer)


State 152

   16 stat: WHILE exp DO block . end

    end  shift, and go to state 173


State 153

   43 varlist_layer: varlist_layer COMMA var .
   73 prefixexp: var .

    EQUAL     reduce using rule 43 (varlist_layer)
    COMMA     reduce using rule 43 (varlist_layer)
    $default  reduce using rule 73 (prefixexp)


State 154

   86 parlist: namelist COMMA . DOTDOTDOT

    DOTDOTDOT  shift, and go to state 174


State 155

   79 args: LEFTPARENTHESES parlist RIGHTPARENTHESES .

    $default  reduce using rule 79 (args)


State 156

   45 var: prefixexp LEFTBRACKET exp RIGHTBRACKET .

    $default  reduce using rule 45 (var)


State 157

   77 functioncall: prefixexp COLON Name args .

    $default  reduce using rule 77 (functioncall)


State 158

   22 stat: FOR Name EQUAL exp COMMA . exp DO block end
   23     | FOR Name EQUAL exp COMMA . exp COMMA exp DO block end

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 175
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 159

   50 namelist_layer: namelist_layer COMMA Name .

    $default  reduce using rule 50 (namelist_layer)


State 160

   24 stat: FOR namelist IN explist DO . block end

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 176
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 161

   37 funcname: Name funcname_layer COLON Name .

    $default  reduce using rule 37 (funcname)


State 162

   39 funcname_layer: funcname_layer DOT Name .

    $default  reduce using rule 39 (funcname_layer)


State 163

   83 funcbody: LEFTPARENTHESES RIGHTPARENTHESES block . end

    end  shift, and go to state 177


State 164

   84 funcbody: LEFTPARENTHESES parlist RIGHTPARENTHESES . block end

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 178
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 165

   96 field: LEFTBRACKET exp RIGHTBRACKET . EQUAL exp

    EQUAL  shift, and go to state 179


State 166

   97 field: Name EQUAL exp .

    $default  reduce using rule 97 (field)


State 167

   93 fieldlist: field fieldlist_layer fieldsep .
   95 fieldlist_layer: fieldlist_layer fieldsep . field

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    LEFTBRACKET      shift, and go to state 88
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 89

    $default  reduce using rule 93 (fieldlist)

    var               go to state 42
    exp               go to state 90
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    field             go to state 180
    unop              go to state 51


State 168

   94 fieldlist_layer: fieldsep field .

    $default  reduce using rule 94 (fieldlist_layer)


State 169

   19 stat: IF exp THEN block ELSE . block end

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 181
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 170

   29 elseif_layer: ELSEIF . exp THEN block

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 182
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 171

   18 stat: IF exp THEN block end .

    $default  reduce using rule 18 (stat)


State 172

   20 stat: IF exp THEN block elseif_layer . end
   21     | IF exp THEN block elseif_layer . ELSE block end
   30 elseif_layer: elseif_layer . ELSEIF exp THEN block

    ELSE    shift, and go to state 183
    ELSEIF  shift, and go to state 184
    end     shift, and go to state 185


State 173

   16 stat: WHILE exp DO block end .

    $default  reduce using rule 16 (stat)


State 174

   86 parlist: namelist COMMA DOTDOTDOT .

    $default  reduce using rule 86 (parlist)


State 175

   22 stat: FOR Name EQUAL exp COMMA exp . DO block end
   23     | FOR Name EQUAL exp COMMA exp . COMMA exp DO block end

    DO     shift, and go to state 186
    COMMA  shift, and go to state 187


State 176

   24 stat: FOR namelist IN explist DO block . end

    end  shift, and go to state 188


State 177

   83 funcbody: LEFTPARENTHESES RIGHTPARENTHESES block end .

    $default  reduce using rule 83 (funcbody)


State 178

   84 funcbody: LEFTPARENTHESES parlist RIGHTPARENTHESES block . end

    end  shift, and go to state 189


State 179

   96 field: LEFTBRACKET exp RIGHTBRACKET EQUAL . exp

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 190
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 180

   95 fieldlist_layer: fieldlist_layer fieldsep field .

    $default  reduce using rule 95 (fieldlist_layer)


State 181

   19 stat: IF exp THEN block ELSE block . end

    end  shift, and go to state 191


State 182

   29 elseif_layer: ELSEIF exp . THEN block

    THEN  shift, and go to state 192


State 183

   21 stat: IF exp THEN block elseif_layer ELSE . block end

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 193
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 184

   30 elseif_layer: elseif_layer ELSEIF . exp THEN block

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 194
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 185

   20 stat: IF exp THEN block elseif_layer end .

    $default  reduce using rule 20 (stat)


State 186

   22 stat: FOR Name EQUAL exp COMMA exp DO . block end

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 195
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 187

   23 stat: FOR Name EQUAL exp COMMA exp COMMA . exp DO block end

    FALSE            shift, and go to state 28
    FUNCTION         shift, and go to state 29
    NIL              shift, and go to state 30
    NOT              shift, and go to state 31
    TRUE             shift, and go to state 32
    MINUS            shift, and go to state 33
    HASHTAG          shift, and go to state 34
    LEFTPARENTHESES  shift, and go to state 10
    LEFTBRACES       shift, and go to state 35
    DOTDOTDOT        shift, and go to state 36
    INTEGER          shift, and go to state 37
    DECIMAL          shift, and go to state 38
    POWEROF          shift, and go to state 39
    HEXADECIMAL      shift, and go to state 40
    String           shift, and go to state 41
    Name             shift, and go to state 11

    var               go to state 42
    exp               go to state 196
    exp_rec           go to state 44
    exp_layer         go to state 45
    Number            go to state 46
    prefixexp         go to state 47
    functioncall      go to state 48
    function          go to state 49
    tableconstructor  go to state 50
    unop              go to state 51


State 188

   24 stat: FOR namelist IN explist DO block end .

    $default  reduce using rule 24 (stat)


State 189

   84 funcbody: LEFTPARENTHESES parlist RIGHTPARENTHESES block end .

    $default  reduce using rule 84 (funcbody)


State 190

   96 field: LEFTBRACKET exp RIGHTBRACKET EQUAL exp .

    $default  reduce using rule 96 (field)


State 191

   19 stat: IF exp THEN block ELSE block end .

    $default  reduce using rule 19 (stat)


State 192

   29 elseif_layer: ELSEIF exp THEN . block

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 197
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 193

   21 stat: IF exp THEN block elseif_layer ELSE block . end

    end  shift, and go to state 198


State 194

   30 elseif_layer: elseif_layer ELSEIF exp . THEN block

    THEN  shift, and go to state 199


State 195

   22 stat: FOR Name EQUAL exp COMMA exp DO block . end

    end  shift, and go to state 200


State 196

   23 stat: FOR Name EQUAL exp COMMA exp COMMA exp . DO block end

    DO  shift, and go to state 201


State 197

   29 elseif_layer: ELSEIF exp THEN block .

    $default  reduce using rule 29 (elseif_layer)


State 198

   21 stat: IF exp THEN block elseif_layer ELSE block end .

    $default  reduce using rule 21 (stat)


State 199

   30 elseif_layer: elseif_layer ELSEIF exp THEN . block

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 202
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 200

   22 stat: FOR Name EQUAL exp COMMA exp DO block end .

    $default  reduce using rule 22 (stat)


State 201

   23 stat: FOR Name EQUAL exp COMMA exp COMMA exp DO . block end

    BREAK            shift, and go to state 1
    DO               shift, and go to state 2
    FOR              shift, and go to state 3
    FUNCTION         shift, and go to state 4
    IF               shift, and go to state 5
    LOCAL            shift, and go to state 6
    REPEAT           shift, and go to state 7
    RETURN           shift, and go to state 8
    WHILE            shift, and go to state 9
    LEFTPARENTHESES  shift, and go to state 10
    Name             shift, and go to state 11

    $default  reduce using rule 3 (chunk)

    block           go to state 203
    chunk           go to state 14
    chunk_layer     go to state 15
    laststat_layer  go to state 16
    stat            go to state 17
    laststat        go to state 18
    varlist         go to state 19
    var             go to state 20
    prefixexp       go to state 21
    functioncall    go to state 22


State 202

   30 elseif_layer: elseif_layer ELSEIF exp THEN block .

    $default  reduce using rule 30 (elseif_layer)


State 203

   23 stat: FOR Name EQUAL exp COMMA exp COMMA exp DO block . end

    end  shift, and go to state 204


State 204

   23 stat: FOR Name EQUAL exp COMMA exp COMMA exp DO block end .

    $default  reduce using rule 23 (stat)
